buildscript {
    repositories {
        mavenCentral()
    }
}


def printOutput(def output) {
    return tasks.create("printOutput") {
        for (line in output.toString().readLines()) {
            println "#educational_plugin" + line
        }
    }
}

subprojects {
    apply plugin: 'application'
    apply plugin: 'java'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven { url "https://jitpack.io" }
    }

    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compile 'com.github.hyperskill:hs-test:master-SNAPSHOT'
        compile group: 'gov.nist.math', name: 'jama', version: '1.0.2'
        compile group: 'org.apache.commons', name: 'commons-math3', version: '3.0'
        compile group: 'org.jfree', name: 'jfreechart', version: '1.0.19'

    }

    sourceSets {
        main {
            java.srcDir 'src'
        }
        test {
            java.srcDir 'test'
        }
    }

    mainClassName = project.hasProperty("mainClass") ? project.getProperty("mainClass") : ""

    def runOutput = new ByteArrayOutputStream()
    tasks.run.setStandardOutput(runOutput)
    tasks.run.doLast { printOutput(runOutput) }
}

project(':util') {
    dependencies {
        compile group: 'junit', name: 'junit', version: '4.12'
    }
}

configure(subprojects.findAll {it.name != 'util'}) {
  dependencies {
    compile project(':util').sourceSets.main.output
    testCompile project(':util').sourceSets.test.output
  }
}
